import re
import logging
from memory_handler import (
    load_notes, save_note, search_notes,
    delete_specific_note, clear_all_notes, update_note
)

# üìò Logger setup
logger = logging.getLogger(__name__)

# üìù Voice Note ‚Äî multilingual note-taking
def create_note(command: str):
    from utils import _speak_multilang, speak, listen_command  # ‚úÖ Lazy import

    try:
        speak("What would you like me to note down?")
        note_content = listen_command().strip()

        if note_content:
            save_note(note_content)
            logger.info(f"[üìù Note Created] {note_content}")
            _speak_multilang(
                "Noted successfully.",
                hi="‡§®‡•ã‡§ü ‡§¨‡§®‡§æ ‡§≤‡•Ä ‡§ó‡§à ‡§π‡•à‡•§",
                fr="Note enregistr√©e avec succ√®s.",
                es="Nota guardada con √©xito.",
                de="Notiz erfolgreich gespeichert."
            )
        else:
            raise ValueError("Empty note")

    except Exception as e:
        logger.error(f"[‚ùå Note Creation Failed] {e}")
        _speak_multilang(
            "Sorry, I couldn‚Äôt save your note.",
            hi="‡§Æ‡§æ‡§´‡§º ‡§ï‡•Ä‡§ú‡§ø‡§è, ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§®‡•ã‡§ü ‡§∏‡§π‡•á‡§ú ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§ï‡•Ä‡•§",
            fr="D√©sol√©e, je n‚Äôai pas pu enregistrer ta note.",
            es="Lo siento, no he podido guardar tu nota.",
            de="Entschuldigung, ich konnte deine Notiz nicht speichern."
        )

# üìñ Read all saved notes
def read_notes(command: str):
    from utils import _speak_multilang

    notes = load_notes()
    if not notes:
        logger.info("[üìñ Read Notes] No saved notes found.")
        _speak_multilang(
            "You have no saved notes.",
            hi="‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§ï‡•ã‡§à ‡§∏‡§π‡•á‡§ú‡•Ä ‡§ó‡§à ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡§Ç‡•§",
            fr="Tu n‚Äôas aucune note enregistr√©e.",
            es="No tienes notas guardadas.",
            de="Du hast keine gespeicherten Notizen."
        )
    else:
        logger.info(f"[üìñ Read Notes] Found {len(notes)} notes.")
        _speak_multilang(
            f"You have {len(notes)} notes. Reading them now.",
            hi=f"‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ {len(notes)} ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§π‡•à‡§Ç‡•§ ‡§Æ‡•à‡§Ç ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§Ö‡§¨ ‡§™‡§¢‡§º ‡§∞‡§π‡•Ä ‡§π‡•Ç‡§Å‡•§",
            fr=f"Tu as {len(notes)} notes. Je vais les lire maintenant.",
            es=f"Tienes {len(notes)} notas. Te las leo ahora.",
            de=f"Du hast {len(notes)} Notizen. Ich lese sie dir vor."
        )
        for idx, note in enumerate(notes, start=1):
            print(f"üìù [{idx}] ({note['timestamp']}): {note['content']}")
        for note in notes:
            _speak_multilang(note['content'])

# üîç Search notes
def search_notes_by_keyword(command: str):
    from utils import _speak_multilang, listen_command

    try:
        keyword = re.sub(
            r"(search notes|find notes|look for note|‡§®‡•ã‡§ü ‡§ñ‡•ã‡§ú‡•á‡§Ç|‡§®‡•ã‡§ü ‡§¢‡•Ç‡§Ç‡§¢‡•ã|chercher des notes|trouve des notes|buscar notas|encontrar notas|suche notizen|finde notizen)",
            "", command, flags=re.IGNORECASE).strip()

        results = search_notes(keyword)

        if not results:
            logger.info(f"[üîç Search Notes] No match for keyword: {keyword}")
            _speak_multilang(
                "No notes found with that keyword.",
                hi="‡§â‡§∏ ‡§ï‡•Ä‡§µ‡§∞‡•ç‡§° ‡§∏‡•á ‡§ï‡•ã‡§à ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•Ä‡§Ç‡•§",
                fr="Aucune note trouv√©e avec ce mot-cl√©.",
                es="No se encontraron notas con esa palabra clave.",
                de="Keine Notizen mit diesem Stichwort gefunden."
            )
        else:
            logger.info(f"[üîç Search Notes] Found {len(results)} notes for keyword: {keyword}")
            _speak_multilang(
                f"I found {len(results)} notes with that keyword.",
                hi=f"‡§Æ‡•Å‡§ù‡•á ‡§â‡§∏ ‡§ï‡•Ä‡§µ‡§∞‡•ç‡§° ‡§∏‡•á {len(results)} ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§Æ‡§ø‡§≤‡•Ä ‡§π‡•à‡§Ç‡•§",
                fr=f"J‚Äôai trouv√© {len(results)} notes avec ce mot-cl√©.",
                es=f"He encontrado {len(results)} notas con esa palabra clave.",
                de=f"Ich habe {len(results)} Notizen mit diesem Stichwort gefunden."
            )

            print("\nüîé Matching Notes:")
            for i, note in enumerate(results, 1):
                print(f"{i}. [{note['timestamp']}] {note['content']}")

            _speak_multilang(
                "Would you like me to read one of them? Say the note number or say cancel.",
                hi="‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§â‡§®‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ï‡•ã‡§à ‡§è‡§ï ‡§®‡•ã‡§ü ‡§∏‡•Å‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡•á‡§Ç‡§ó‡•Ä? ‡§®‡§Ç‡§¨‡§∞ ‡§¨‡§§‡§æ‡§á‡§è ‡§Ø‡§æ ‡§ï‡•à‡§Ç‡§∏‡§ø‡§≤ ‡§ï‡§π‡§ø‡§è‡•§",
                fr="Souhaites-tu que je lise l‚Äôune d‚Äôelles ? Dis le num√©ro ou dis ¬´ annule ¬ª.",
                es="¬øQuieres que lea una de ellas? Di el n√∫mero o di cancelar.",
                de="M√∂chtest du, dass ich eine davon vorlese? Sag die Nummer oder 'abbrechen'."
            )

            user_reply = listen_command().lower()
            if any(word in user_reply for word in ["cancel", "‡§ï‡•à‡§Ç‡§∏‡§ø‡§≤", "annule", "cancela", "abbrechen"]):
                logger.info("[üîç Search Cancelled by User]")
                _speak_multilang(
                    "Okay, cancelled reading.",
                    hi="‡§†‡•Ä‡§ï ‡§π‡•à, ‡§™‡§¢‡§º‡§®‡§æ ‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
                    fr="D‚Äôaccord, j‚Äôannule la lecture.",
                    es="De acuerdo, he cancelado la lectura.",
                    de="Okay, ich habe das Vorlesen abgebrochen."
                )
            else:
                match = re.search(r"\d+", user_reply)
                if match:
                    index = int(match.group())
                    if 1 <= index <= len(results):
                        selected_note = results[index - 1]['content']
                        logger.info(f"[üîç Note Read] Note #{index}: {selected_note}")
                        _speak_multilang(selected_note)
                    else:
                        _speak_multilang(
                            "That number is out of range.",
                            hi="‡§µ‡§π ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∏‡•Ä‡§Æ‡§æ ‡§∏‡•á ‡§¨‡§æ‡§π‡§∞ ‡§π‡•à‡•§",
                            fr="Ce num√©ro est hors de port√©e.",
                            es="Ese n√∫mero est√° fuera de rango.",
                            de="Diese Nummer ist au√üerhalb des g√ºltigen Bereichs."
                        )
                else:
                    _speak_multilang(
                        "Sorry, I didn't understand the number.",
                        hi="‡§Æ‡§æ‡§´‡§º ‡§ï‡•Ä‡§ú‡§ø‡§è, ‡§Æ‡•à‡§Ç ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§Æ‡§ù ‡§∏‡§ï‡•Ä‡•§",
                        fr="D√©sol√©e, je n‚Äôai pas compris le num√©ro.",
                        es="Lo siento, no entend√≠ el n√∫mero.",
                        de="Entschuldigung, ich habe die Nummer nicht verstanden."
                    )

    except Exception as e:
        logger.error(f"[‚ùå Search Failed] {e}")
        _speak_multilang(
            "Something went wrong while searching the notes.",
            hi="‡§®‡•ã‡§ü‡•ç‡§∏ ‡§ñ‡•ã‡§ú‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§ï‡•Å‡§õ ‡§ó‡§°‡§º‡§¨‡§°‡§º ‡§π‡•ã ‡§ó‡§à‡•§",
            fr="Une erreur s‚Äôest produite lors de la recherche des notes.",
            es="Algo sali√≥ mal al buscar las notas.",
            de="Beim Durchsuchen der Notizen ist ein Fehler aufgetreten."
        )

# ‚úèÔ∏è Update a note
def update_note_handler(command: str):
    from utils import _speak_multilang

    try:
        index = None
        keyword = None
        new_content = None

        match = re.search(r"note\s*(number\s*)?(\d+)\s*(to|into)?\s*(.+)", command)
        if match:
            index = int(match.group(2))
            new_content = match.group(4).strip()
        else:
            match_kw = re.search(r"(?:update|change|edit)\s+note\s+(.*?)\s+(to|into)\s+(.+)", command)
            if match_kw:
                keyword = match_kw.group(1).strip()
                new_content = match_kw.group(3).strip()

        if new_content and (index or keyword):
            success = update_note(index=index, keyword=keyword, new_content=new_content)
            if success:
                logger.info(f"[‚úèÔ∏è Note Updated] index={index} | keyword={keyword} ‚Üí {new_content}")
                _speak_multilang(
                    "Note updated successfully.",
                    hi="‡§®‡•ã‡§ü ‡§ï‡•ã ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
                    fr="Note mise √† jour avec succ√®s.",
                    es="Nota actualizada con √©xito.",
                    de="Notiz erfolgreich aktualisiert."
                )
            else:
                raise ValueError("Note not found")
        else:
            raise ValueError("Could not parse command")

    except Exception as e:
        logger.error(f"[‚ùå Update Failed] {e}")
        _speak_multilang(
            "Sorry, I couldn't update the note.",
            hi="‡§Æ‡§æ‡§´‡§º ‡§ï‡•Ä‡§ú‡§ø‡§è, ‡§Æ‡•à‡§Ç ‡§®‡•ã‡§ü ‡§Ö‡§™‡§°‡•á‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∏‡§ï‡•Ä‡•§",
            fr="D√©sol√©e, je n‚Äôai pas pu mettre √† jour la note.",
            es="Lo siento, no he podido actualizar la nota.",
            de="Entschuldigung, ich konnte die Notiz nicht aktualisieren."
        )

# ‚ùå Delete note(s)
def delete_note_handler(command: str):
    from utils import _speak_multilang

    try:
        if "all notes" in command or "‡§∏‡§≠‡•Ä" in command or "toutes" in command or "todas" in command or "alle" in command:
            clear_all_notes()
            logger.info("[‚ùå Notes Cleared] All notes deleted.")
            _speak_multilang(
                "All notes deleted successfully.",
                hi="‡§∏‡§≠‡•Ä ‡§®‡•ã‡§ü‡•ç‡§∏ ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§π‡§ü‡§æ ‡§¶‡•Ä ‡§ó‡§à ‡§π‡•à‡§Ç‡•§",
                fr="Toutes les notes ont √©t√© supprim√©es avec succ√®s.",
                es="Todas las notas han sido eliminadas con √©xito.",
                de="Alle Notizen wurden erfolgreich gel√∂scht."
            )
        else:
            index = None
            keyword = None

            match = re.search(r"note\s*(number\s*)?(\d+)", command)
            if match:
                index = int(match.group(2))
            else:
                keyword = re.sub(
                    r"(delete note|remove note|delete my note|remove my note|‡§®‡•ã‡§ü ‡§π‡§ü‡§æ‡§ì|‡§Æ‡•á‡§∞‡•Ä ‡§®‡•ã‡§ü ‡§π‡§ü‡§æ‡§ì|supprime la note|borra la nota|l√∂sche die notiz|meine notiz l√∂schen)",
                    "", command, flags=re.IGNORECASE).strip()

            success = delete_specific_note(index=index, keyword=keyword)

            if success:
                logger.info(f"[‚ùå Note Deleted] index={index} | keyword={keyword}")
                _speak_multilang(
                    "Note deleted successfully.",
                    hi="‡§®‡•ã‡§ü ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§π‡§ü‡§æ ‡§¶‡•Ä ‡§ó‡§à ‡§π‡•à‡•§",
                    fr="Note supprim√©e avec succ√®s.",
                    es="Nota eliminada con √©xito.",
                    de="Notiz erfolgreich gel√∂scht."
                )
            else:
                _speak_multilang(
                    "Sorry, I couldn't find that note.",
                    hi="‡§Æ‡§æ‡§´‡§º ‡§ï‡•Ä‡§ú‡§ø‡§è, ‡§Æ‡•à‡§Ç ‡§µ‡§π ‡§®‡•ã‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§¢‡•Ç‡§Ç‡§¢ ‡§∏‡§ï‡•Ä‡•§",
                    fr="D√©sol√©e, je n‚Äôai pas trouv√© cette note.",
                    es="Lo siento, no he podido encontrar esa nota.",
                    de="Entschuldigung, ich konnte die Notiz nicht finden."
                )

    except Exception as e:
        logger.error(f"[‚ùå Delete Failed] {e}")
        _speak_multilang(
            "Something went wrong while trying to delete the note.",
            hi="‡§®‡•ã‡§ü ‡§π‡§ü‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§ó‡§°‡§º‡§¨‡§°‡§º ‡§π‡•ã ‡§ó‡§à‡•§",
            fr="Une erreur s‚Äôest produite lors de la suppression de la note.",
            es="Algo sali√≥ mal al intentar eliminar la nota.",
            de="Beim L√∂schen der Notiz ist ein Fehler aufgetreten."
        )
