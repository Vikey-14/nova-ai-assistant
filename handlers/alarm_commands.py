# üìÇ handlers/alarm_commands.py

import re
import time
import threading
import datetime
import dateparser
import logging
from difflib import get_close_matches

from command_map import COMMAND_MAP

# üìò Configure logger
logger = logging.getLogger(__name__)

# üîÅ Background alarm/reminder thread
def _schedule_checker(hour: int, minute: int, task_type: str, task: str = ""):
    from utils import _speak_multilang

    while True:
        now = datetime.datetime.now()
        if now.hour >= hour and now.minute >= minute:
            logger.info(f"[‚úÖ {task_type.capitalize()} Triggered] {task or f'{hour:02d}:{minute:02d}'}")
            if task_type == "alarm":
                _speak_multilang(
                    f"It's {hour:02d}:{minute:02d}. Time to wake up!",
                    hi=f"{hour:02d}:{minute:02d} ‡§¨‡§ú ‡§ó‡§è ‡§π‡•à‡§Ç‡•§ ‡§Ö‡§¨ ‡§â‡§†‡§®‡•á ‡§ï‡§æ ‡§∏‡§Æ‡§Ø ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à!",
                    de=f"Es ist {hour:02d}:{minute:02d}. Zeit, aufzuwachen!",
                    fr=f"Il est {hour:02d}:{minute:02d}. Il est temps de te r√©veiller !",
                    es=f"Son las {hour:02d}:{minute:02d}. ¬°Es hora de levantarte!"
                )
            elif task_type == "reminder":
                _speak_multilang(
                    f"Reminder: {task}",
                    hi=f"‡§∞‡§ø‡§Æ‡§æ‡§á‡§Ç‡§°‡§∞: {task}",
                    de=f"Erinnerung: {task}",
                    fr=f"Rappel : {task}",
                    es=f"Recordatorio: {task}"
                )
            break
        time.sleep(30)

# ‚è∞ Alarm Command Handler
def handle_set_alarm(command: str):
    from utils import _speak_multilang

    match = re.search(r"(\d{1,2})[:\s](\d{1,2})", command)
    if match:
        hour = int(match.group(1))
        minute = int(match.group(2))
        threading.Thread(target=_schedule_checker, args=(hour, minute, "alarm"), daemon=True).start()
        logger.info(f"[‚è∞ Alarm Set] {hour:02d}:{minute:02d}")
        _speak_multilang(
            f"Alarm set for {hour:02d}:{minute:02d}.",
            hi=f"{hour:02d}:{minute:02d} ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§≤‡§æ‡§∞‡•ç‡§Æ ‡§∏‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
            de=f"Ich habe den Alarm f√ºr {hour:02d}:{minute:02d} eingestellt.",
            fr=f"J‚Äôai r√©gl√© l‚Äôalarme pour {hour:02d}¬†h¬†{minute:02d}.",
            es=f"He configurado la alarma para las {hour:02d}:{minute:02d}."
        )
    else:
        logger.warning("[‚è∞ Alarm Parse Failed] No valid time found.")
        _speak_multilang(
            "I couldn't understand the alarm time.",
            hi="‡§Æ‡•à‡§Ç ‡§Ö‡§≤‡§æ‡§∞‡•ç‡§Æ ‡§ï‡§æ ‡§∏‡§Æ‡§Ø ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§Æ‡§ù ‡§™‡§æ‡§à‡•§",
            de="D√©sol√©e, je n‚Äôai pas compris l‚Äôheure de l‚Äôalarme.",
            fr="D√©sol√©e, je n‚Äôai pas compris l‚Äôheure de l‚Äôalarme.",
            es="Lo siento, no entend√≠ la hora de la alarma."
        )

# üîî Reminder Command Handler
def handle_set_reminder(command: str):
    from utils import _speak_multilang

    match = re.search(r"(\d{1,2})[:\s](\d{1,2}).*?(to|‡§ï‡§ø|√†|para|um)\s(.+)", command)
    if match:
        hour = int(match.group(1))
        minute = int(match.group(2))
        task = match.group(4).strip()
        threading.Thread(target=_schedule_checker, args=(hour, minute, "reminder", task), daemon=True).start()
        logger.info(f"[üîî Reminder Set] {hour:02d}:{minute:02d} ‚Üí {task}")
        _speak_multilang(
            f"Reminder set for {hour:02d}:{minute:02d} to {task}.",
            hi=f"{hour:02d}:{minute:02d} ‡§¨‡§ú‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∞‡§ø‡§Æ‡§æ‡§á‡§Ç‡§°‡§∞ ‡§∏‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à: {task}",
            de=f"Ich habe eine Erinnerung um {hour:02d}:{minute:02d} eingerichtet: {task}",
            fr=f"J‚Äôai cr√©√© un rappel √† {hour:02d}¬†h¬†{minute:02d} pour : {task}",
            es=f"He configurado un recordatorio a las {hour:02d}:{minute:02d} para: {task}"
        )
    else:
        logger.warning("[üîî Reminder Parse Failed] Invalid time or task.")
        _speak_multilang(
            "I couldn't understand the reminder details.",
            hi="‡§Æ‡•à‡§Ç ‡§∞‡§ø‡§Æ‡§æ‡§á‡§Ç‡§°‡§∞ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§Æ‡§ù ‡§™‡§æ‡§à‡•§",
            de="D√©sol√©e, je n‚Äôai pas compris les d√©tails du rappel.",
            fr="D√©sol√©e, je n‚Äôai pas compris les d√©tails du rappel.",
            es="Lo siento, no entend√≠ los detalles del recordatorio."
        )
