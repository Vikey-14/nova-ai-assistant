name: macOS build (.app + DMG + PKG)
on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Homebrew deps
        run: |
          brew install portaudio ffmpeg

      - name: Python deps
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.macos.txt pyinstaller edge-tts gTTS playsound
          pip cache purge || true

      - name: Make .icns from assets/nova_icon_256.png
        run: |
          mkdir -p icons/nova.iconset
          sips -z 16 16  assets/nova_icon_256.png --out icons/nova.iconset/icon_16x16.png
          sips -z 32 32  assets/nova_icon_256.png --out icons/nova.iconset/icon_16x16@2x.png
          sips -z 32 32  assets/nova_icon_256.png --out icons/nova.iconset/icon_32x32.png
          sips -z 64 64  assets/nova_icon_256.png --out icons/nova.iconset/icon_32x32@2x.png
          sips -z 128 128 assets/nova_icon_256.png --out icons/nova.iconset/icon_128x128.png
          sips -z 256 256 assets/nova_icon_256.png --out icons/nova.iconset/icon_128x128@2x.png
          cp assets/nova_icon_256.png icons/nova.iconset/icon_512x512.png
          cp assets/nova_icon_256.png icons/nova.iconset/icon_512x512@2x.png
          iconutil -c icns icons/nova.iconset -o icons/nova.icns

      - name: Build apps with PyInstaller
        run: |
          pyinstaller --clean NOVA_Mac.spec
          rm -rf build

      - name: Strip binaries inside .app bundles (shrink)
        run: |
          set -e
          if [ -d "dist/NOVA.app/Contents/MacOS" ]; then
            find "dist/NOVA.app/Contents/MacOS" -type f -perm -111 -exec strip -x {} + || true
          fi
          if [ -d "dist/Nova Tray.app/Contents/MacOS" ]; then
            find "dist/Nova Tray.app/Contents/MacOS" -type f -perm -111 -exec strip -x {} + || true
          fi

      - name: Free Homebrew caches (shrink)
        run: |
          brew cleanup -s || true
          rm -rf "$(brew --cache)" || true

      - name: Prepare workspace TMPDIR and check free space
        run: |
          mkdir -p tmp dist_mac
          echo "TMPDIR=$PWD/tmp" >> $GITHUB_ENV
          echo "==== Disk before DMG ===="; df -h /

      - name: Make DMG (apps only to reduce size)
        env:
          TMPDIR: ${{ env.TMPDIR }}
        run: |
          APPVER=${GITHUB_REF_NAME#v}
          mkdir -p "dist_mac/NOVA-${APPVER}"
          cp -R "dist/NOVA.app"      "dist_mac/NOVA-${APPVER}/"
          cp -R "dist/Nova Tray.app" "dist_mac/NOVA-${APPVER}/"
          hdiutil create -volname "NOVA ${APPVER}" -srcfolder "dist_mac/NOVA-${APPVER}" -ov -format UDZO "NOVA_${APPVER}_mac.dmg"

      - name: Build PKG installer (primary for mac users)
        env:
          TMPDIR: ${{ env.TMPDIR }}
        run: |
          APPVER=${GITHUB_REF_NAME#v}
          chmod +x mac/pkg/scripts/postinstall
          pkgbuild --identifier com.novaai.NOVA \
                   --version "$APPVER" \
                   --install-location /Applications \
                   --component "dist/NOVA.app" \
                   --component "dist/Nova Tray.app" \
                   --scripts mac/pkg/scripts \
                   "NOVA_${APPVER}_mac.pkg"

      - name: Install & verify PKG on runner (headless smoke test)
        shell: bash
        run: |
          set -e
          APPVER=${GITHUB_REF_NAME#v}
          if ! sudo installer -pkg "NOVA_${APPVER}_mac.pkg" -target / -verboseR; then
            echo "---- tail /var/log/install.log ----"
            sudo tail -n 200 /var/log/install.log || true
            exit 1
          fi
          test -d "/Applications/NOVA.app"
          test -d "/Applications/Nova Tray.app"
          test -x "/Applications/NOVA.app/Contents/MacOS/NOVA"
          test -x "/Applications/Nova Tray.app/Contents/MacOS/NovaTray"
          test -f "/Library/LaunchAgents/com.novaai.tray.plist"
          /usr/libexec/PlistBuddy -c 'Print :ProgramArguments:0' /Library/LaunchAgents/com.novaai.tray.plist | grep -F "/Applications/Nova Tray.app/Contents/MacOS/NovaTray"
          echo "PKG install + layout verified."

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NOVA-mac-${{ github.ref_name }}
          path: |
            dist/*.app
            NOVA_*_mac.dmg
            NOVA_*_mac.pkg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download mac artifacts
        uses: actions/download-artifact@v4
        with:
          name: NOVA-mac-${{ github.ref_name }}
          path: release_assets

      - name: Zip .app bundles for upload
        run: |
          cd release_assets
          if [ -d "NOVA.app" ]; then zip -r "NOVA_${GITHUB_REF_NAME#v}_mac.app.zip" "NOVA.app"; fi
          if [ -d "Nova Tray.app" ]; then zip -r "Nova_Tray_${GITHUB_REF_NAME#v}_mac.app.zip" "Nova Tray.app"; fi
          if [ -d "dist/NOVA.app" ]; then (cd dist && zip -r "../NOVA_${GITHUB_REF_NAME#v}_mac.app.zip" "NOVA.app"); fi
          if [ -d "dist/Nova Tray.app" ]; then (cd dist && zip -r "../Nova_Tray_${GITHUB_REF_NAME#v}_mac.app.zip" "Nova Tray.app"); fi

      - name: Make stable-named copies (for latest/ links)
        run: |
          cd release_assets
          pkg=$(ls NOVA_*_mac.pkg | head -n1); cp "$pkg" NOVA_mac.pkg
          dmg=$(ls NOVA_*_mac.dmg | head -n1); cp "$dmg" NOVA_mac.dmg
          shasum -a 256 * > SHA256SUMS.txt || true

      - name: Create/Update GitHub Release (attach mac files)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: NOVA ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            release_assets/NOVA_*_mac.dmg
            release_assets/NOVA_*_mac.pkg
            release_assets/NOVA_mac.dmg
            release_assets/NOVA_mac.pkg
            release_assets/*_mac.app.zip
            release_assets/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
