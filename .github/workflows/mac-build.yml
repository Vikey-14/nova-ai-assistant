name: macOS build (.app + DMG + PKG)

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Homebrew deps
        run: |
          set -euo pipefail
          brew install portaudio ffmpeg

      - name: Python deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip wheel
          pip install -r requirements.macos.txt pyinstaller edge-tts gTTS playsound
          pip cache purge || true

      - name: Derive APPVER from tag
        run: |
          echo "APPVER=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Make .icns from assets/nova_icon_256.png
        run: |
          set -euo pipefail
          mkdir -p icons/nova.iconset
          sips -z 16 16  assets/nova_icon_256.png --out icons/nova.iconset/icon_16x16.png
          sips -z 32 32  assets/nova_icon_256.png --out icons/nova.iconset/icon_16x16@2x.png
          sips -z 32 32  assets/nova_icon_256.png --out icons/nova.iconset/icon_32x32.png
          sips -z 64 64  assets/nova_icon_256.png --out icons/nova.iconset/icon_32x32@2x.png
          sips -z 128 128 assets/nova_icon_256.png --out icons/nova.iconset/icon_128x128.png
          sips -z 256 256 assets/nova_icon_256.png --out icons/nova.iconset/icon_128x128@2x.png
          cp assets/nova_icon_256.png icons/nova.iconset/icon_512x512.png
          cp assets/nova_icon_256.png icons/nova.iconset/icon_512x512@2x.png
          iconutil -c icns icons/nova.iconset -o icons/nova.icns

      - name: Build apps with PyInstaller
        run: |
          set -euo pipefail
          pyinstaller --clean NOVA_Mac.spec
          rm -rf build

      - name: Strip binaries inside .app bundles (shrink)
        run: |
          set -euo pipefail
          if [ -d "dist/NOVA.app/Contents/MacOS" ]; then
            find "dist/NOVA.app/Contents/MacOS" -type f -perm -111 -exec strip -x {} + || true
          fi
          if [ -d "dist/Nova Tray.app/Contents/MacOS" ]; then
            find "dist/Nova Tray.app/Contents/MacOS" -type f -perm -111 -exec strip -x {} + || true
          fi

      - name: Free Homebrew caches (shrink)
        run: |
          set -euo pipefail
          brew cleanup -s || true
          rm -rf "$(brew --cache)" || true

      - name: Prepare workspace TMPDIR and check free space
        run: |
          set -euo pipefail
          mkdir -p tmp dist_mac
          echo "TMPDIR=$PWD/tmp" >> $GITHUB_ENV
          echo "==== Disk before DMG ===="; df -h /

      - name: Make DMG (apps only to reduce size)
        env:
          TMPDIR: ${{ env.TMPDIR }}
        run: |
          set -euo pipefail
          mkdir -p "dist_mac/NOVA-${APPVER}"
          cp -R "dist/NOVA.app"      "dist_mac/NOVA-${APPVER}/"
          cp -R "dist/Nova Tray.app" "dist_mac/NOVA-${APPVER}/"
          hdiutil create -volname "NOVA ${APPVER}" -srcfolder "dist_mac/NOVA-${APPVER}" -ov -format UDZO "NOVA_${APPVER}_mac.dmg"

      - name: Build PKG installer (primary for mac users)
        env:
          TMPDIR: ${{ env.TMPDIR }}
        run: |
          set -euo pipefail
          chmod +x mac/pkg/scripts/postinstall
          pkgbuild --identifier com.novaai.NOVA \
                   --version "$APPVER" \
                   --install-location /Applications \
                   --component "dist/NOVA.app" \
                   --component "dist/Nova Tray.app" \
                   --scripts mac/pkg/scripts \
                   "NOVA_${APPVER}_mac.pkg"

      # ---------- NEW: split install and checks ----------

      - name: Install PKG (fail only if installer errors)
        run: |
          set -euo pipefail
          if ! sudo env CI=1 GITHUB_ACTIONS=1 installer -pkg "NOVA_${APPVER}_mac.pkg" -target / -verboseR; then
            echo "---- tail /var/log/install.log ----"
            sudo tail -n 200 /var/log/install.log || true
            exit 1
          fi

      - name: Post-install sanity (non-fatal warnings)
        run: |
          set +e  # do NOT fail build on the checks below
          echo "::group::Sanity checks"
          warn=0
          check() { eval "$1"; rc=$?; if [ $rc -ne 0 ]; then echo "::warning::$2"; warn=1; fi; }
          check '[ -d "/Applications/NOVA.app" ]' "Missing /Applications/NOVA.app"
          check '[ -d "/Applications/Nova Tray.app" ]' "Missing /Applications/Nova Tray.app"
          check '[ -x "/Applications/NOVA.app/Contents/MacOS/NOVA" ]' "NOVA binary not executable"
          check '[ -x "/Applications/Nova Tray.app/Contents/MacOS/NovaTray" ]' "NovaTray binary not executable"
          if [ -f "/Library/LaunchAgents/com.novaai.tray.plist" ]; then
            ARG0="$(/usr/libexec/PlistBuddy -c 'Print :ProgramArguments:0' /Library/LaunchAgents/com.novaai.tray.plist 2>/dev/null)"
            echo "LaunchAgent ProgramArguments[0]: ${ARG0:-<none>}"
            echo "${ARG0:-}" | grep -q "NovaTray" || echo "::warning::LaunchAgent ProgramArguments doesn't contain 'NovaTray'"
          else
            echo "::warning::/Library/LaunchAgents/com.novaai.tray.plist missing"
            warn=1
          fi
          echo "::endgroup::"
          # Always succeed; installer success is what we care about in CI
          exit 0

      # --------------------------------------------------

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NOVA-mac-${{ github.ref_name }}
          path: |
            dist/*.app
            NOVA_*_mac.dmg
            NOVA_*_mac.pkg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Set APPVER for body
        run: echo "APPVER=${GITHUB_REF_NAME#v}" >> "$GITHUB_ENV"

      - name: Download mac artifacts
        uses: actions/download-artifact@v4
        with:
          name: NOVA-mac-${{ github.ref_name }}
          path: release_assets

      - name: Zip .app bundles for upload
        run: |
          set -euo pipefail
          cd release_assets
          if [ -d "NOVA.app" ]; then zip -r "NOVA_${APPVER}_mac.app.zip" "NOVA.app"; fi
          if [ -d "Nova Tray.app" ]; then zip -r "Nova_Tray_${APPVER}_mac.app.zip" "Nova Tray.app"; fi
          if [ -d "dist/NOVA.app" ]; then (cd dist && zip -r "../NOVA_${APPVER}_mac.app.zip" "NOVA.app"); fi
          if [ -d "dist/Nova Tray.app" ]; then (cd dist && zip -r "../Nova_Tray_${APPVER}_mac.app.zip" "Nova Tray.app"); fi

      - name: Make stable-named copies (for latest/ links)
        run: |
          set -euo pipefail
          cd release_assets
          pkg=$(ls NOVA_*_mac.pkg | head -n1); cp "$pkg" NOVA_mac.pkg
          dmg=$(ls NOVA_*_mac.dmg | head -n1); cp "$dmg" NOVA_mac.dmg
          shasum -a 256 * > SHA256SUMS.txt || true

      - name: Prepare release body (no linter warnings)
        run: |
          set -euo pipefail
          cat > release_assets/RELEASE_BODY.md <<'EOF'
          ## Download (pick your OS)

          🪟 **Windows**
          - Installer: **NovaSetup.exe**
          - Portable: **NOVA_${APPVER}_windows_portable.zip**

          🍎 **macOS**
          - PKG (recommended): **NOVA_${APPVER}_mac.pkg**
          - DMG: **NOVA_${APPVER}_mac.dmg**
          - App zips: **NOVA_${APPVER}_mac.app.zip**, **Nova_Tray_${APPVER}_mac.app.zip**

          🐧 **Linux (Debian/Ubuntu)**
          - .deb: **nova_ai_assistant_${APPVER}-1_amd64.deb**
            (stable copy: **nova_ai_assistant_amd64.deb**)

          🔐 **Checksums**
          - **SHA256SUMS.txt**
          EOF
          sed -i.bak "s/\${APPVER}/${APPVER}/g" release_assets/RELEASE_BODY.md
          rm -f release_assets/RELEASE_BODY.md.bak

      - name: Create/Update GitHub Release (attach mac files + nice body)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: NOVA ${{ github.ref_name }}
          draft: false
          prerelease: false
          body_path: release_assets/RELEASE_BODY.md
          files: |
            release_assets/NOVA_*_mac.dmg
            release_assets/NOVA_*_mac.pkg
            release_assets/NOVA_mac.dmg
            release_assets/NOVA_mac.pkg
            release_assets/*_mac.app.zip
            release_assets/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
