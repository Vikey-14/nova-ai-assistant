name: Linux build (.deb)

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ---- System deps (PyAudio needs PortAudio headers) ----
      - name: System deps
        run: |
          sudo apt-get -qq update
          sudo apt-get -yqq install \
            build-essential python3-dev pkg-config \
            portaudio19-dev libportaudio2 libportaudiocpp0 \
            libasound2-dev libjack-jackd2-dev \
            ffmpeg libpulse0 desktop-file-utils
          # Ubuntu 24.04 renamed libasound2 -> libasound2t64
          sudo apt-get -yqq install libasound2 || sudo apt-get -yqq install libasound2t64

      - name: Python deps
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.linux.txt pyinstaller

      - name: Build with PyInstaller (Linux)
        run: |
          # Put PyInstaller outputs under dist_linux to match pack_deb.sh
          pyinstaller --distpath dist_linux NOVA_Linux.spec
          ls -lah dist_linux || true

      # Clean up old .deb files so only the latest remains
      - name: Clean old .deb files (keep workspace tidy)
        run: rm -f dist_linux/nova_ai_assistant_*_amd64.deb || true

      - name: Build .deb
        env:
          APPVER: ${{ github.ref_name }}
        run: |
          APPVER="${APPVER#v}"
          if [ -z "$APPVER" ]; then APPVER="1.0.0"; fi
          bash pack_deb.sh "${APPVER}-1"
          ls -lah dist_linux | grep -E '\.deb$' || true

      - name: Install & verify (smoke test)
        run: |
          sudo apt-get -yqq install ./dist_linux/*.deb
          test -f /usr/share/applications/nova.desktop
          test -f /etc/xdg/autostart/nova-tray.desktop
          echo "Linux .deb installed & basic files present."

      - name: Upload artifact (.deb)
        uses: actions/upload-artifact@v4
        with:
          name: NOVA-linux-${{ github.ref_name }}
          path: dist_linux/*.deb
          if-no-files-found: error
          compression-level: 0

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: NOVA-linux-${{ github.ref_name }}
          path: release_assets

      # DEBUG: show what we downloaded and where (helps if anything ever goes wrong)
      - name: List downloaded files
        run: |
          echo "::group::release_assets tree"
          ls -laR release_assets || true
          echo "::endgroup::"

      - name: Make stable-named copy (.deb) + checksums
        run: |
          set -e
          cd release_assets
          # Find the versioned .deb even if it's nested in a subfolder
          DEB="$(find . -type f -name 'nova_ai_assistant_*_amd64.deb' | head -n1)"
          if [ -z "$DEB" ]; then
            echo "ERROR: no .deb found under $(pwd)"
            exit 1
          fi
          cp -f "$DEB" nova_ai_assistant_amd64.deb
          shasum -a 256 * > SHA256SUMS.txt || true
          ls -la

      - name: Create/Update GitHub Release (attach .deb)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: NOVA ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            release_assets/**/*.deb   # versioned + stable copy, recursive
            release_assets/SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
